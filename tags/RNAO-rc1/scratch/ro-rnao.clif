(cl-module ro-rnao-inst-inst

           (transitive part_of)
           (weakly_reflexive part_of)
           (inverse_of part_of has_part)
           (symmetric covalently_bonded_to)

           (forall (x y)
                   (iff (overlaps x y)
                        (exists (z) (and (part_of z x)
                                         (part_of z y)))))

           // x is the sum_of_collection p iff for all z, z overlaps_with x iff (there is a y such that y member_of p and y overlaps_with z).
           (forall (x p)
                   (iff (sum_of_collection x p)
                        (forall (z)
                                (iff (overlaps z x)
                                     (exists (y) (and (member_of y p)
                                                      (overlaps y z)))))))

           // x is mereologically_maximal iff for all y, if y overlaps_with x, then y part_of of x
           (forall (x)
                   (iff (mereologically_maximal x)
                        (forall (y)
                                (if (overlaps y x)
                                    (part_of y x)))))

           // y is q1_connected_to z iff [(y and z are atoms) and (there exists a covalent bond between y and z)].
           (forall (y z)
                   (iff (q1_connected_to y z)
                        (and (instance_of y atom)
                             (instance_of z atom)
                             (covalently_bonded_to y z))))

           (symmetric q1_connected_to)
           //(not (transitive q1_connected_to))
           (irreflexive q1_connected_to)
           //(not (functional q1_connected_to))

           // x is the q1_connected_sum_of p iff [p is a collection of atoms and x is the sum_of_collection p and for all y and z in p, (either y q1_connected_to z or there exist y1 ... ym in p such that y q1_connected_to y1 q1_connected_to y2  ... ym-1 q1_connected_to ym q1_connected_to z)]. 

           (transitive_version_of q1_reachable q1_connected_to)

           (forall (x p)
                   (iff (q1_connected_sum_of x p)
                        (and (atom_collection p)
                             (sum_of_collection x p)
                             (forall (y z)
                                     (if (and (member_of y p)
                                              (member_of z p))
                                         (q1_reachable y z))))))

           // pmolecule: x is a pmolecule iff x is a q1_connected_sum_of p and x is mereologically_maximal
           (forall (x)
                   (iff (pmolecule p x)
                        (and (q1_connected_sum_of x p)
                             (mereologically_maximal x))))

           // molecule: x is a molecule iff there is a collection p of atoms such that x is a pmolecule
           (forall (x)
                   (iff (instance_of x molecule)
                        (exists (p)
                                (pmolecule p x))))

           // y sub_molecule_of x iff there are collections p and r such that y is a q1_connected_sum_of r and X is a q1_connected_sum_of p and r is a sub_collection of p. 
           (forall (x y)
                   (iff (sub_molecule_of y x)
                        (exists (p r)
                                (and (collection p)
                                     (collection r)
                                     (q1_connected_sum_of y r)
                                     (q1_connected_sum_of x p)
                                     (sub_collection_of r p)))))

           (forall (a b)
                   (iff (sub_collection_of a b)
                        (forall (x)
                                (if (member_of x a)
                                    (member_of x b)))))

           // q2_connected_to: x q2_connected_to y iff (x and y are atoms or sub_molecule or molecules, in any combination) and (there is an attractive interaction between them that does not involve a covalent bond).
           (forall (x y)
                   (iff (q2_connected_to x y)
                        (and (molecular_level x)
                             (molecular_level y)
                             (not (covalently_bonded_to x y))
                             (interacts_with x y))))

           (forall (x)
                   (iff (molecular_level x)
                        (or (instance_of x atom)
                            (instance_of x sub_molecule)
                            (instance_of x molecule))))
                            

           (symmetric q2_connected_to)
           //(not (transitive q2_connected_to))
)
                             
                        
